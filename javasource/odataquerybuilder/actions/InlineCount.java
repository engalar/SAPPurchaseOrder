// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package odataquerybuilder.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import odataquerybuilder.proxies.OptionType;
import odataquerybuilder.proxies.QueryOption;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * This is used to set the inlinecount query option to ‘allpages’.
 * A count of the number of items returned will be included in the result and is available in the ResultInfo entity supplied in your OData query action. 
 */
public class InlineCount extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __OData;
	private odataquerybuilder.proxies.OData OData;

	public InlineCount(IContext context, IMendixObject OData)
	{
		super(context);
		this.__OData = OData;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.OData = this.__OData == null ? null : odataquerybuilder.proxies.OData.initialize(getContext(), __OData);

		// BEGIN USER CODE
		QueryOption count = new QueryOption(this.getContext());
		count.setOptionType(OptionType.inlinecount);
		count.setQueryParam_OData(OData);
		count.commit();
		count.setOrder(OData.getNextOrderNumber());
		OData.setNextOrderNumber(OData.getNextOrderNumber()+1);
		OData.commit();
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "InlineCount";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
